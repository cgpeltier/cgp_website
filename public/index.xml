<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chad Peltier</title>
    <link>/</link>
    <description>Recent content on Chad Peltier</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyzing Sturgill Simpson&#39;s Music</title>
      <link>/2020/11/05/analyzing-sturgill-simpson-s-music/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/05/analyzing-sturgill-simpson-s-music/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sturgill Simpson&#39;s Music in R</title>
      <link>/2020/11/05/sturgill-simpson-s-music-in-r/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/05/sturgill-simpson-s-music-in-r/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Analyzing the Fleet Foxes&#39; Music in R</title>
      <link>/2020/11/02/analyzing-the-fleet-foxes-music-in-r/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/02/analyzing-the-fleet-foxes-music-in-r/</guid>
      <description>This project is designed to compare Fleet Foxes’ four albums. It uses the spotifyr and geniusr packages to download song features and lyrics, allowing for text analysis of lyrics for each track. I’ll use various NLP tools, including sentiment analysis and LDA to provide unsupervised classification of tracks on each album.
library(tidyverse)library(tidytext)library(spotifyr)library(geniusr)library(httr)library(jsonlite)library(tidytext)library(topicmodels)library(tidymodels)library(ggridges)library(kableExtra)library(textrecipes)Pull dataHere we pull data from Spotify, keeping just the four main albums in Spotify: Fleet Foxes, Helplessness Blues, Crack-Up, and Shore, which was just released in October 2020.</description>
    </item>
    
    <item>
      <title>janesR</title>
      <link>/2020/11/02/janesr/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/02/janesr/</guid>
      <description>I developed an R package to more easily interact with the Janes API, called janesR (available here).
It currently provides functions for querying 17 different endpoints and returning tibbles ready for analysis and/or joining with other data. It also provides functions for exporting data from the same 17 endpoints into XML or JSON, if those formats are preferable.</description>
    </item>
    
    <item>
      <title>Old Projects</title>
      <link>/2020/11/02/old-projects/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/02/old-projects/</guid>
      <description>I created this website in early November, 2020. Rather than re-post all of the data science projects from my previous portfolio, I’ll instead link to them all here in this post.
I’m planning on updating a few of these projects. Any updates will be posted as new pages on my new blogdown-powered website instead.
Modeling Emerging Technologies in the FY2021 RDT&amp;amp;E Budget (Including PDF scraping)This project scrapes data from the FY2021 RDT&amp;amp;E defense budgets (the PEDS documents) and then classifies R&amp;amp;D programs at the Accomplishment / Planned Programs level into various types of emerging technologies.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>My name is Chad Peltier and I am a data analyst at Janes. I am interested in data science for social good and public policy.
I love working on data science projects that involve data wrangling of unstructured data from multiple sources, machine learning and NLP. At Janes I help create new data products, integrate Janes data with our clients&#39; systems, as well as provide custom data projects. I wrote the janesR package to help Janes users access the Janes API.</description>
    </item>
    
  </channel>
</rss>
